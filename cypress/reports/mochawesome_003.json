{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-15T16:44:07.561Z",
    "end": "2025-10-15T16:44:13.371Z",
    "duration": 5810,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "695a19f5-4b64-49de-baf0-cfcd6d77f75c",
      "title": "",
      "fullFile": "cypress\\e2e\\hibrido\\parabankCuenta.cy.js",
      "file": "cypress\\e2e\\hibrido\\parabankCuenta.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f2a6e15-05cc-4865-a442-7ca8d8413787",
          "title": "Flujo hibrido: Crear cuenta API y validar en UI",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Crear cuenta y validar",
              "fullTitle": "Flujo hibrido: Crear cuenta API y validar en UI Crear cuenta y validar",
              "timedOut": null,
              "duration": 3228,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = this.credentials.usuarioParabank;\n//Crear cuenta desde API\n_parabankService.default.loginAPI(user.username, user.password).then(resp => {\n  expect(resp.status).to.eq(200);\n  cy.log(JSON.stringify(resp.body));\n  Cypress.env('customerId', resp.body.id); //Guardamos el id del cleinte ingresado\n  _parabankService.default.getAccounts(Cypress.env('customerId')).then(resp => {\n    expect(resp.status).to.eq(200);\n    cy.log(JSON.stringify(resp.body));\n    Cypress.env('accounts', resp.body); //Guardamos las cuentas del cliente\n    const tipoCuenta = [0, 1]; //0 = Savings 1 = Checking\n    const Cuentas = Cypress.env('accounts'); //Cuentas guardadas del cliente\n    const fromAccountId = Cuentas[0].id; //Usamos la cuenta origen del cliente\n    _parabankService.default.createAccount(Cypress.env('customerId'), fromAccountId, tipoCuenta[1]).then(resp => {\n      expect(resp.status).to.eq(200);\n      cy.log(JSON.stringify(resp.body));\n      Cypress.env('newAccountId', resp.body); //Guardamos el id de la nueva cuenta\n    });\n  });\n});\nconst newAccount = Cypress.env('newAccountId');\n//Visitar el UI y confirmar pagina\n_AccountsPage.default.visitPage();\n_AccountsPage.default.typeUsername(user.username);\n_AccountsPage.default.typePassword(user.password);\n_AccountsPage.default.loginBtn();\n_AccountsPage.default.validarPagina();\n_AccountsPage.default.tableAccounts(newAccount);",
              "err": {},
              "uuid": "2b2ce52d-8422-4855-95f0-4beedff84c71",
              "parentUUID": "0f2a6e15-05cc-4865-a442-7ca8d8413787",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b2ce52d-8422-4855-95f0-4beedff84c71"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3228,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}