{
  "stats": {
    "suites": 4,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-10-23T16:32:09.345Z",
    "end": "2025-10-23T16:32:28.202Z",
    "duration": 18857
  },
  "results": [
    {
      "uuid": "5faf6b8c-3189-4312-ab6f-5a23095dc547",
      "title": "",
      "fullFile": "cypress\\e2e\\ui\\loginPage.cy.js",
      "file": "cypress\\e2e\\ui\\loginPage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "77e91de2-b40c-4410-b722-16e520ee4aeb",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login exitoso",
              "fullTitle": "Login Login exitoso",
              "timedOut": null,
              "duration": 2218,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Validacion login\n_loginPage.default.typeUsername('standard_user');\n_loginPage.default.typePassword('secret_sauce');\n_loginPage.default.loginBtn();\n//Validacion de pantalla de inventario\nlet url = 'https://www.saucedemo.com/inventory.html';\ncy.url(url).should('eq', 'https://www.saucedemo.com/inventory.html');",
              "err": {},
              "uuid": "eaebe419-4421-47f0-bcc6-3879aad3e1b9",
              "parentUUID": "77e91de2-b40c-4410-b722-16e520ee4aeb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login con campos vacios",
              "fullTitle": "Login Login con campos vacios",
              "timedOut": null,
              "duration": 325,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginPage.default.loginBtn();\ncy.get('h3').should('contain', 'Epic sadface: Username is required');",
              "err": {},
              "uuid": "5ba1be02-12ee-472a-8e36-caa84914185c",
              "parentUUID": "77e91de2-b40c-4410-b722-16e520ee4aeb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login con campos erroneos",
              "fullTitle": "Login Login con campos erroneos",
              "timedOut": null,
              "duration": 665,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginPage.default.typeUsername('standard_user');\n_loginPage.default.typePassword('123');\n_loginPage.default.loginBtn();\ncy.get('h3').should('contain', 'Epic sadface: Username and password do not match any user in this service');",
              "err": {},
              "uuid": "9f93d291-b200-457a-adc7-d9100b9d19ff",
              "parentUUID": "77e91de2-b40c-4410-b722-16e520ee4aeb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eaebe419-4421-47f0-bcc6-3879aad3e1b9",
            "5ba1be02-12ee-472a-8e36-caa84914185c",
            "9f93d291-b200-457a-adc7-d9100b9d19ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3208,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "01b6336f-8902-4b7d-9065-a5c5e05f55ac",
      "title": "",
      "fullFile": "cypress\\e2e\\api\\booking.cy.js",
      "file": "cypress\\e2e\\api\\booking.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b35a84f2-c059-4060-8afd-597754e57d4d",
          "title": "Restful-booker E2E",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "getBooking",
              "fullTitle": "Restful-booker E2E getBooking",
              "timedOut": null,
              "duration": 694,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_bookingService.default.getBooking(Cypress.env('bookingId')).then(resp => {\n  expect(resp.status).to.eq(200);\n  expect(resp.body.firstname).to.exist;\n});",
              "err": {},
              "uuid": "1f9d7815-1e35-42df-a695-359e7d36cbd9",
              "parentUUID": "b35a84f2-c059-4060-8afd-597754e57d4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updateBooking",
              "fullTitle": "Restful-booker E2E updateBooking",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('bookingUpdate').then(update => {\n  _bookingService.default.updateBooking(Cypress.env('bookingId'), update.update).then(resp => {\n    expect(resp.status).to.eq(200);\n    expect(resp.body.firstname).to.eq(update.update.firstname);\n  });\n});",
              "err": {},
              "uuid": "59f6aadb-929b-485e-a7d9-e33ce9e6c47c",
              "parentUUID": "b35a84f2-c059-4060-8afd-597754e57d4d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f9d7815-1e35-42df-a695-359e7d36cbd9",
            "59f6aadb-929b-485e-a7d9-e33ce9e6c47c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 883,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4513faa0-e64b-4fae-9797-3091062db5fb",
      "title": "",
      "fullFile": "cypress\\e2e\\api\\parabankHybridTest.cy.js",
      "file": "cypress\\e2e\\api\\parabankHybridTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b93027af-d12f-48c2-8c23-4d37c2f2091f",
          "title": "Pruebas hibridas de parabank",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "loginAPI",
              "fullTitle": "Pruebas hibridas de parabank loginAPI",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = this.credentials.usuarioParabank;\n_parabankService.default.loginAPI(user.username, user.password).then(resp => {\n  expect(resp.status).to.eq(200);\n  cy.log(JSON.stringify(resp.body));\n  Cypress.env('customerId', resp.body.id); //Guardamos el id del cleinte ingresado\n});",
              "err": {},
              "uuid": "7d3cd706-1e14-4a14-8488-68ce4ce91f04",
              "parentUUID": "b93027af-d12f-48c2-8c23-4d37c2f2091f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cuentas cliente",
              "fullTitle": "Pruebas hibridas de parabank Cuentas cliente",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_parabankService.default.getAccounts(Cypress.env('customerId')).then(resp => {\n  expect(resp.status).to.eq(200);\n  cy.log(JSON.stringify(resp.body));\n  Cypress.env('accounts', resp.body); //Guardamos las cuentas del cliente\n});",
              "err": {},
              "uuid": "1c348a14-b5a1-4b37-9b8a-b5bc467000d0",
              "parentUUID": "b93027af-d12f-48c2-8c23-4d37c2f2091f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crear nueva cuenta",
              "fullTitle": "Pruebas hibridas de parabank Crear nueva cuenta",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const tipoCuenta = [0, 1]; //0 = Savings 1 = Checking\nconst Cuentas = Cypress.env('accounts'); //Cuentas guardadas del cliente\nconst fromAccountId = Cuentas[0].id; //Usamos la cuenta origen del cliente\n_parabankService.default.createAccount(Cypress.env('customerId'), fromAccountId, tipoCuenta[1]).then(resp => {\n  expect(resp.status).to.eq(200);\n  cy.log(JSON.stringify(resp.body));\n  Cypress.env('newAccountId', resp.body); //Guardamos el id de la nueva cuenta\n});",
              "err": {},
              "uuid": "ce3ef4d1-dff0-40f8-a527-89837649e915",
              "parentUUID": "b93027af-d12f-48c2-8c23-4d37c2f2091f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Detalle de cuenta",
              "fullTitle": "Pruebas hibridas de parabank Detalle de cuenta",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const Cuentas = Cypress.env('accounts'); //Cuentas guardadas del cliente\nconst accountId = Cuentas[0].id; //Detalle de la cuenta n\nconst tipoCuenta = ['SAVINGS', 'CHECKING']; //Tipos de cuenta\n_parabankService.default.getAccountDetail(accountId).then(resp => {\n  expect(resp.status).to.eq(200);\n  cy.log(JSON.stringify(resp.body));\n  if (resp.body.type == 'SAVINGS') {\n    expect(resp.body.type).to.eq(tipoCuenta[0]);\n  } else {\n    expect(resp.body.type).to.eq(tipoCuenta[1]);\n  }\n});",
              "err": {},
              "uuid": "88fab101-757b-454c-95b9-ab5176c9ce27",
              "parentUUID": "b93027af-d12f-48c2-8c23-4d37c2f2091f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tranferir fondos",
              "fullTitle": "Pruebas hibridas de parabank Tranferir fondos",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const Cuentas = Cypress.env('accounts'); //Cuentas guardadas del cliente\nconst fromAccount = Cuentas[1].id; //cuenta origen\nconst toAccount = Cuentas[3].id; //cuenta detino\nconst amount = 730; //Monto\n_parabankService.default.transferFunds(fromAccount, toAccount, amount).then(resp => {\n  expect(resp.status).to.eq(200);\n  cy.log(JSON.stringify(resp.body));\n  expect(resp.body).to.include(fromAccount);\n  expect(resp.body).to.include(toAccount);\n  expect(resp.body).to.include(amount);\n});",
              "err": {},
              "uuid": "29ee99fe-6337-4131-9e5d-acd3c8c98ecf",
              "parentUUID": "b93027af-d12f-48c2-8c23-4d37c2f2091f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d3cd706-1e14-4a14-8488-68ce4ce91f04",
            "1c348a14-b5a1-4b37-9b8a-b5bc467000d0",
            "ce3ef4d1-dff0-40f8-a527-89837649e915",
            "88fab101-757b-454c-95b9-ab5176c9ce27",
            "29ee99fe-6337-4131-9e5d-acd3c8c98ecf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 621,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b5c3d816-0c8b-413f-86de-b68acaa46cf3",
      "title": "",
      "fullFile": "cypress\\e2e\\hibrido\\parabankCuenta.cy.js",
      "file": "cypress\\e2e\\hibrido\\parabankCuenta.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "18841bf5-1aa6-4239-91ac-3d57037252ef",
          "title": "Flujo hibrido: Crear cuenta API y validar en UI",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Crear cuenta y validar",
              "fullTitle": "Flujo hibrido: Crear cuenta API y validar en UI Crear cuenta y validar",
              "timedOut": null,
              "duration": 2337,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = this.credentials.usuarioParabank;\n//Crear cuenta desde API\n_parabankService.default.loginAPI(user.username, user.password).then(resp => {\n  expect(resp.status).to.eq(200);\n  cy.log(JSON.stringify(resp.body));\n  Cypress.env('customerId', resp.body.id); //Guardamos el id del cleinte ingresado\n  _parabankService.default.getAccounts(Cypress.env('customerId')).then(resp => {\n    expect(resp.status).to.eq(200);\n    cy.log(JSON.stringify(resp.body));\n    Cypress.env('accounts', resp.body); //Guardamos las cuentas del cliente\n    const tipoCuenta = [0, 1]; //0 = Savings 1 = Checking\n    const Cuentas = Cypress.env('accounts'); //Cuentas guardadas del cliente\n    const fromAccountId = Cuentas[0].id; //Usamos la cuenta origen del cliente\n    _parabankService.default.createAccount(Cypress.env('customerId'), fromAccountId, tipoCuenta[1]).then(resp => {\n      expect(resp.status).to.eq(200);\n      cy.log(JSON.stringify(resp.body));\n      Cypress.env('newAccountId', resp.body); //Guardamos el id de la nueva cuenta\n    });\n  });\n});\nconst newAccount = Cypress.env('newAccountId');\n//Visitar el UI y confirmar pagina\n_AccountsPage.default.visitPage();\n_AccountsPage.default.typeUsername(user.username);\n_AccountsPage.default.typePassword(user.password);\n_AccountsPage.default.loginBtn();\n_AccountsPage.default.validarPagina();\n_AccountsPage.default.tableAccounts(newAccount);",
              "err": {},
              "uuid": "673fd494-d686-4011-92cf-3cbcc30f50c1",
              "parentUUID": "18841bf5-1aa6-4239-91ac-3d57037252ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "673fd494-d686-4011-92cf-3cbcc30f50c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2337,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.3.0"
    }
  }
}